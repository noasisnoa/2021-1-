# -*- coding: utf-8 -*-
"""6. 넘파이의 정렬과 병합.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uh0NwjD1KpmZ2NuTkoPEwnAMpB18a-vB

# 넘파이의 정렬과 병합
"""

import numpy as np
arr = np.array([2, 1, 5, 3, 7, 4, 6, 8])
arr

np.sort(arr) # 정렬

np.sort(arr)[::-1] # 역순정렬

np.random.seed(42)  # seed를 같게 하여서 예제와 같은 값이 나오도록 했다. 
a = np.random.randint(0, 10, 12) # 무작위 정수
a

np.sort(a)

# 2차원
np.random.seed(42)  # seed를 같게 하여서 예제와 같은 값이 나오도록 했다. 
a = np.random.randint(0, 10, 12).reshape([3,4]) # 무작위 정수.모양 다시 만들기
a

a.shape

np.sort(a) # axis - -1

np.sort(a)[:, ::-1] #2차원이기 때문에 차원을 맞춰준다. 역정렬

np.sort(a, axis = 0)

np.sort(a, axis = 0)[::-1, :] # 행을 역정렬

# 2차원
np.random.seed(42)  # seed를 같게 하여서 예제와 같은 값이 나오도록 했다. 
a = np.random.randint(0, 10, 12).reshape([3,4]) # 무작위 정수.모양 다시 만들기
a

np.argsort(a) # 인덱스 자리 안의 숫자의 크기에 따라 배열 : 인덱스 값을 반환한다.

np.argsort(a)[:, ::-1] # np.argsort(a)열의 값을 뒤부터 차례로

np.argsort(a, axis=0)

np.argsort(a, axis=0)[::-1, :] #np.argsort(a)행을 기준으로 역정렬

# concat
a = np.array([1, 2, 3, 4])
b = np.array([5, 6, 7, 8])

np.concatenate((a, b)) # 리스트 형태로 얻어준다.

np.concatenate([a, b]) #튜플 형태로 넣어준다.

x = np.array([[1, 2], [3, 4]]) #2차원 형태의 값 
y = np.array([[5, 6]])
x.shape, y.shape

np.concatenate((x, y), axis=0) #행을 기준으로 합쳐주었다.  /1을 넣으면 차원이 안 맞아서 값이 나오지 않는다.

