# -*- coding: utf-8 -*-
"""9. 넘파이 Numpy 인덱싱과 슬라이싱 조건 검색.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13TbLtBeF_ZFLD2eiL0C7nG3DsU1rudNJ

# 넘파이 Numpy 인덱싱과 슬라이싱 조건 검색
"""

import numpy as np
data = np.array([1, 2, 3])
data

data[0]

data[1]

data[0:2]

data[:]

data[1:]

data[-2:] # 뒤에서 두번째 부터 끝까지

a = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])
a

a[a < 5]

a[a > 5]

a[a % 2 == 0]

a[a % 2!= 0 #나눴을 때 0이 아닌 값만 (홀수)

c = a[(a > 2) & (a < 11)]  #a는 2보다 크고 11보다 작은 값
c                          # and 조건이다.

d =a[(a > 5) | (a ==5 )]# a는 5이상인 값, or 조건
 d

a = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])
a

b = np.nonzero(a < 5) # ????
b

list_of_coordinates = list(zip(b[0], b[1])) # ??

for cord in list_of_coordinates:
    print(cord)

a[b] # a의 안에 b